-- Listar todos os Pokémon de um determinado treinador e seu respectivo time:
SELECT
    T.NOME AS TREINADOR,
    P.NOME AS POKEMON,
    PT.TIME_ID,
    PT.pokemon_id
FROM
    PROJETO_FINAL.TREINADOR T
    JOIN PROJETO_FINAL.TREINADOR_TIME TT ON T.TREINADOR_ID = TT.TREINADOR_ID
    JOIN PROJETO_FINAL.POKEMON_TIME PT ON TT.TIME_ID = PT.TIME_ID
    JOIN PROJETO_FINAL.POKEMON P ON PT.POKEMON_ID = P.POKEMON_ID
WHERE
    T.NOME = 'Kleber';

-- Listar todos os treinadores que têm um Pokémon específico:
SELECT
    T.NOME AS TREINADOR,
    P.NOME AS POKEMON,
    P.POkemon_id
FROM
    PROJETO_FINAL.TREINADOR T
    JOIN PROJETO_FINAL.TREINADOR_TIME TT ON T.TREINADOR_ID = TT.TREINADOR_ID
    JOIN PROJETO_FINAL.POKEMON_TIME PT ON TT.TIME_ID = PT.TIME_ID
    JOIN PROJETO_FINAL.POKEMON P ON PT.POKEMON_ID = P.POKEMON_ID
WHERE
    P.NOME = 'golbat';

-- Listar todos os Pokémon que aprenderam um movimento específico:
SELECT
    P.NOME AS POKEMON,
    M.NOME AS MOVIMENTO,
    P.POKEMON_ID
FROM
    PROJETO_FINAL.POKEMON P
    JOIN PROJETO_FINAL.POKEMON_MOVE PM ON P.POKEMON_ID = PM.POKEMON_ID
    JOIN PROJETO_FINAL.MOVE M ON PM.MOVE_ID = M.MOVE_ID
WHERE
    M.NOME = 'Pound';

-- Listar todos os treinadores que participaram de batalhas em um ginásio específico:
SELECT
    T.NOME AS TREINADOR,
    B.GINASIO_ID,
    B.BATALHA_ID
FROM
    PROJETO_FINAL.TREINADOR T
    JOIN PROJETO_FINAL.TREINADOR_BATALHA TB ON T.TREINADOR_ID = TB.TREINADOR_ID
    JOIN PROJETO_FINAL.BATALHA B ON TB.BATALHA_ID = B.BATALHA_ID
WHERE
    B.GINASIO_ID = 8;

-- Listar todos os treinadores que venceram batalhas em uma determinada região:
SELECT
    T.NOME AS TREINADOR,
    B.GINASIO_ID,
    B.DATA,
    B.BATALHA_ID
FROM
    PROJETO_FINAL.TREINADOR T
    JOIN PROJETO_FINAL.TREINADOR_BATALHA TB ON T.TREINADOR_ID = TB.TREINADOR_ID
    JOIN PROJETO_FINAL.BATALHA B ON TB.BATALHA_ID = B.BATALHA_ID
WHERE
    B.VENCEDOR_ID = T.TREINADOR_ID
    AND T.REGIAO_ID = (
        SELECT
            REGIAO_ID
        FROM
            PROJETO_FINAL.REGIAO
        WHERE
            NOME = 'Kanto'
    );

-- Listar todos os treinadores que têm uma bolsa de determinada cor, pertencem a uma região específica e têm uma faixa etária específica:
SELECT
    T.NOME AS TREINADOR,
    B.COR,
    R.NOME AS REGIAO,
    T.IDADE
FROM
    PROJETO_FINAL.TREINADOR T
    JOIN PROJETO_FINAL.TREINADOR_BOLSA TB ON T.TREINADOR_ID = TB.TREINADOR_ID
    JOIN PROJETO_FINAL.BOLSA B ON TB.BOLSA_ID = B.BOLSA_ID
    JOIN PROJETO_FINAL.TREINADOR T2 ON T.TREINADOR_ID = T2.TREINADOR_ID
    JOIN PROJETO_FINAL.REGIAO R ON T2.REGIAO_ID = R.REGIAO_ID
WHERE
    B.COR = 'Laranja'
    AND R.NOME = 'Kanto'
    AND T.IDADE BETWEEN 20
    AND 30;

-- Listar todos os treinadores que possuem um item de um tipo específico em suas bolsas:
SELECT
    T.NOME AS TREINADOR,
    I.DESCRICAO,
    I.TIPO_ITEM
FROM
    PROJETO_FINAL.TREINADOR T
    JOIN PROJETO_FINAL.TREINADOR_BOLSA TB ON T.TREINADOR_ID = TB.TREINADOR_ID
    JOIN PROJETO_FINAL.BOLSA B ON TB.BOLSA_ID = B.BOLSA_ID
    JOIN PROJETO_FINAL.ITEM I ON B.BOLSA_ID = I.BOLSA_ID
WHERE
    I.TIPO_ITEM = 'evolution';

-- Listando treinadores que nunca batalharam em um ginasio
SELECT
    T.NOME AS TREINADOR
FROM
    PROJETO_FINAL.TREINADOR T
WHERE
    NOT EXISTS (
        SELECT
            1
        FROM
            PROJETO_FINAL.TREINADOR_BATALHA TB
            JOIN PROJETO_FINAL.BATALHA B ON TB.BATALHA_ID = B.BATALHA_ID
            JOIN PROJETO_FINAL.GINASIO G ON B.GINASIO_ID = G.GINASIO_ID
        WHERE
            TB.TREINADOR_ID = T.TREINADOR_ID
    );

-- Listar todos os treinadores que possuem um Pokémon de um determinado tipo:
SELECT
    DISTINCT T.NOME AS TREINADOR,
    TP.NOME_TIPO
FROM
    PROJETO_FINAL.TREINADOR T
    JOIN PROJETO_FINAL.TREINADOR_TIME TT ON T.TREINADOR_ID = TT.TREINADOR_ID
    JOIN PROJETO_FINAL.POKEMON_TIME PT ON TT.TIME_ID = PT.TIME_ID
    JOIN PROJETO_FINAL.POKEMON P ON PT.POKEMON_ID = P.POKEMON_ID
    JOIN PROJETO_FINAL.POKEMON_TIPO_POKEMON PTP ON P.POKEMON_ID = PTP.POKEMON_ID
    JOIN PROJETO_FINAL.TIPO_POKEMON TP ON PTP.TIPO_POKEMON_ID = TP.TIPO_POKEMON_ID
WHERE
    TP.NOME_TIPO = 'Normal';

-- Listar todos os treinadores que possuem um Pokémon de um tipo específico e com nível superior a um determinado valor:
SELECT
    DISTINCT T.NOME AS TREINADOR,
    P.NOME AS POKEMON,
    P.LVL
FROM
    PROJETO_FINAL.TREINADOR T
    JOIN PROJETO_FINAL.TREINADOR_TIME TT ON T.TREINADOR_ID = TT.TREINADOR_ID
    JOIN PROJETO_FINAL.POKEMON_TIME PT ON TT.TIME_ID = PT.TIME_ID
    JOIN PROJETO_FINAL.POKEMON P ON PT.POKEMON_ID = P.POKEMON_ID
    JOIN PROJETO_FINAL.POKEMON_TIPO_POKEMON PTP ON P.POKEMON_ID = PTP.POKEMON_ID
    JOIN PROJETO_FINAL.TIPO_POKEMON TP ON PTP.TIPO_POKEMON_ID = TP.TIPO_POKEMON_ID
WHERE
    TP.NOME_TIPO = 'Normal'
    AND P.LVL > 90;

-- Listar todos os Pokémon que compartilham um movimento específico e são do mesmo tipo:
SELECT
    P1.NOME AS POKEMON_1,
    P2.NOME AS POKEMON_2,
    M.NOME AS MOVIMENTO
FROM
    PROJETO_FINAL.POKEMON_MOVE PM1
    JOIN PROJETO_FINAL.POKEMON P1 ON PM1.POKEMON_ID = P1.POKEMON_ID
    JOIN PROJETO_FINAL.MOVE M ON PM1.MOVE_ID = M.MOVE_ID
    JOIN PROJETO_FINAL.POKEMON_MOVE PM2 ON M.MOVE_ID = PM2.MOVE_ID
    JOIN PROJETO_FINAL.POKEMON P2 ON PM2.POKEMON_ID = P2.POKEMON_ID
    JOIN PROJETO_FINAL.POKEMON_TIPO_POKEMON PTP1 ON P1.POKEMON_ID = PTP1.POKEMON_ID
    JOIN PROJETO_FINAL.POKEMON_TIPO_POKEMON PTP2 ON P2.POKEMON_ID = PTP2.POKEMON_ID
WHERE
    PTP1.TIPO_POKEMON_ID = PTP2.TIPO_POKEMON_ID
    AND P1.POKEMON_ID < P2.POKEMON_ID;

-- Consulta para ver quantas bolsas possui tal item buscando por nome e mostre o nome dos treinadores
SELECT
    I.NOME AS ITEM,
    COUNT(DISTINCT B.BOLSA_ID) AS NUMERO_BOLSAS,
    ARRAY_TO_STRING(ARRAY_AGG(T.NOME), ', ') AS TREINADORES_COM_BOLSA
FROM
    PROJETO_FINAL.ITEM I
    JOIN PROJETO_FINAL.BOLSA B ON I.BOLSA_ID = B.BOLSA_ID
    JOIN PROJETO_FINAL.TREINADOR_BOLSA TB ON B.BOLSA_ID = TB.BOLSA_ID
    JOIN PROJETO_FINAL.TREINADOR T ON TB.TREINADOR_ID = T.TREINADOR_ID
WHERE
    I.NOME = 'rare-candy'
GROUP BY
    I.NOME;

-- Tipo dominante de Pokémon por time
SELECT
    T.TIME_ID,
    CASE
        WHEN COUNT(DISTINCT TP.NOME_TIPO) = 1 THEN MIN(TP.NOME_TIPO)
        WHEN COUNT(DISTINCT TP.NOME_TIPO) = 2 THEN 'Equilibrado'
        ELSE 'Misto'
    END AS TIPO_DOMINANTE
FROM
    PROJETO_FINAL.TREINADOR_TIME TT
    JOIN PROJETO_FINAL.POKEMON_TIME PT ON TT.TIME_ID = PT.TIME_ID
    JOIN PROJETO_FINAL.POKEMON_TIPO_POKEMON PTP ON PT.POKEMON_ID = PTP.POKEMON_ID
    JOIN PROJETO_FINAL.TIPO_POKEMON TP ON PTP.TIPO_POKEMON_ID = TP.TIPO_POKEMON_ID
    JOIN PROJETO_FINAL.TIME T ON TT.TIME_ID = T.TIME_ID
GROUP BY
    T.TIME_ID;

-- Listar Pokémon de cada time por treinador, listando seus tipos e nome dos pokemon
SELECT
    T.NOME AS TREINADOR,
    TM.TIME_ID,
    P.NOME AS POKEMON,
    TP.NOME_TIPO AS TIPO
FROM
    PROJETO_FINAL.TREINADOR T
    JOIN PROJETO_FINAL.TREINADOR_TIME TM ON T.TREINADOR_ID = TM.TREINADOR_ID
    JOIN PROJETO_FINAL.POKEMON_TIME PT ON TM.TIME_ID = PT.TIME_ID
    JOIN PROJETO_FINAL.POKEMON P ON PT.POKEMON_ID = P.POKEMON_ID
    JOIN PROJETO_FINAL.POKEMON_TIPO_POKEMON PTP ON P.POKEMON_ID = PTP.POKEMON_ID
    JOIN PROJETO_FINAL.TIPO_POKEMON TP ON PTP.TIPO_POKEMON_ID = TP.TIPO_POKEMON_ID;

-- Listagem de ganhadores por determinado ginásio
SELECT
    T.NOME AS TREINADOR_NOME,
    G.NOME AS GINASIO_NOME,
    COUNT(*) AS NUMERO_VITORIAS
FROM
    PROJETO_FINAL.TREINADOR T
    JOIN PROJETO_FINAL.TREINADOR_BATALHA TB ON T.TREINADOR_ID = TB.TREINADOR_ID
    JOIN PROJETO_FINAL.BATALHA B ON TB.BATALHA_ID = B.BATALHA_ID
    JOIN PROJETO_FINAL.GINASIO G ON B.GINASIO_ID = G.GINASIO_ID
WHERE
    G.NOME = 'Ginásio Elétrico'
GROUP BY
    T.NOME,
    G.NOME;

-- Treinadores que participaram de batalhas nos últimos 15 meses e que são maiores de 18 anos
SELECT
    *
FROM
    PROJETO_FINAL.TREINADOR T
    JOIN PROJETO_FINAL.TREINADOR_BATALHA TB ON T.TREINADOR_ID = TB.TREINADOR_ID
    JOIN PROJETO_FINAL.BATALHA B ON TB.BATALHA_ID = B.BATALHA_ID
WHERE
    B.DATA BETWEEN CURRENT_DATE - INTERVAL '15 months'
    AND CURRENT_DATE
    AND T.IDADE > 18;

-- Treinador do time e Pokémon mais forte por time
SELECT
    T.NOME AS TREINADOR,
    TT.TIME_ID,
    P.NOME AS POKEMON_MAIS_FORTE,
    MAX(P.ATK) AS FORCA_DE_ATAQUE
FROM
    PROJETO_FINAL.TREINADOR T
    JOIN PROJETO_FINAL.TREINADOR_TIME TT ON T.TREINADOR_ID = TT.TREINADOR_ID
    JOIN PROJETO_FINAL.POKEMON_TIME PT ON TT.TIME_ID = PT.TIME_ID
    JOIN PROJETO_FINAL.POKEMON P ON PT.POKEMON_ID = P.POKEMON_ID
WHERE
    (TT.TIME_ID, P.ATK) IN (
        SELECT
            PT.TIME_ID,
            MAX(P.ATK) AS FORCA_DE_ATAQUE
        FROM
            PROJETO_FINAL.POKEMON_TIME PT
            JOIN PROJETO_FINAL.POKEMON P ON PT.POKEMON_ID = P.POKEMON_ID
        GROUP BY
            PT.TIME_ID
    )
GROUP BY
    T.NOME,
    TT.TIME_ID,
    P.NOME;

-- Chamando procedure para atualizar idade de treinador
CALL atualizar_idade_treinador(7, 19);

-- Chamado para obter informações do treinador pelo id
CALL obter_info_treinador(4);

-- Chamado para obter informações do treinador por nome
CALL obter_info_treinador_por_nome('Ana');

-- Selecionar todos os Pokémon da view
SELECT
    *
FROM
    PROJETO_FINAL.VIEW_ALL_POKEMONS;

-- Filtrar usando view para filtrar por tipo
SELECT
    *
FROM
    PROJETO_FINAL.VIEW_ALL_POKEMONS
WHERE
    NOME_TIPO = 'Voador';

-- Selecionar todas as vitórias filtando por treinador
SELECT
    *
FROM
    PROJETO_FINAL.View_todas_as_vitorias
where
    treinador_nome = 'Igor';

-- Selecionar a média de atributos por tipo de Pokémon
SELECT
    *
FROM
    PROJETO_FINAL.View_Media_Atributos_Tipo_Pokemon
WHERE
    NOME_TIPO = 'Fogo';

-- FUNÇÃO PARA ESCOLHER UM POKEMON POR NOME E RETORNAR TODOS OS POKEMONS DO MESMO TIPO
SELECT
    *
FROM
    encontrar_pokemon_por_tipo('machop');